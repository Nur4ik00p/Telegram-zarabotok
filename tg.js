const TelegramBot = require('node-telegram-bot-api');
const crypto = require('crypto');

// –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
const token = '7088257898:AAHi6ec6mZeF5tbZxpzyj9OF_CyuY68iYPw';
const bot = new TelegramBot(token, { polling: true });

// –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ (—É–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ ID)
let admins = [6576634479]; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–∏—Ö –∞–¥–º–∏–Ω–æ–≤

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
const withdrawalRequests = {};

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –±–∞–ª–∞–Ω—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
const userBalances = {};
const userReferrals = {};
const referralReward = 30;
const clickReward = 1;
const exchangeRate = 1000; // 1000 –º–æ–Ω–µ—Ç = 100 –¢–ì

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
function generateReferralLink(userId) {
    const token = crypto.randomBytes(16).toString('hex');
    return `https://t.me/YOUR_BOT_USERNAME?start=${token}`;
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const username = msg.from.username || msg.from.first_name;

    if (!userBalances[chatId]) {
        userBalances[chatId] = 0;
    }

    if (!userReferrals[chatId]) {
        userReferrals[chatId] = [];
    }

    const referralLink = generateReferralLink(chatId);
    bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${username}! –í–æ—Ç –≤–∞—à–µ –º–µ–Ω—é:`, {
        reply_markup: {
            keyboard: [
                ['üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å', 'üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã'],
                ['üìÅ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 'üì§ –í—ã–≤–µ—Å—Ç–∏'],
                ['üíµ –û–±–º–µ–Ω—è—Ç—å –º–æ–Ω–µ—Ç—ã', 'üìß –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å'],
                ['‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'ü§ñ –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞']
            ],
            resize_keyboard: true
        }
    });
    bot.sendMessage(chatId, `–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
bot.onText(/\/start (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    const referralToken = match[1];

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç—Ç–∏–º —Ç–æ–∫–µ–Ω–æ–º
    for (let userId in userReferrals) {
        const link = generateReferralLink(userId);
        if (link.includes(referralToken)) {
            if (!userReferrals[userId].includes(chatId)) {
                userReferrals[userId].push(chatId);
                userBalances[userId] = (userBalances[userId] || 0) + referralReward;
                userBalances[chatId] = (userBalances[chatId] || 0) + referralReward;
                bot.sendMessage(userId, `–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ ${referralReward} –º–æ–Ω–µ—Ç –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${msg.from.username || msg.from.first_name}. –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${userBalances[userId]} –º–æ–Ω–µ—Ç.`);
            }
            break;
        }
    }

    bot.sendMessage(chatId, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å! –í–æ—Ç –≤–∞—à–µ –º–µ–Ω—é:');
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –º–µ–Ω—é.');
});

// –ö–æ–º–∞–Ω–¥–∞ "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å"
bot.onText(/üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å/, (msg) => {
    const chatId = msg.chat.id;

    if (userBalances[chatId] !== undefined) {
        userBalances[chatId] += clickReward;
        bot.sendMessage(chatId, `–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${clickReward} –º–æ–Ω–µ—Ç. –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${userBalances[chatId]} –º–æ–Ω–µ—Ç.`);
    } else {
        bot.sendMessage(chatId, '–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
});

// –ö–æ–º–∞–Ω–¥–∞ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å"
bot.onText(/üìß –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å/, (msg) => {
    const chatId = msg.chat.id;

    const referralLink = generateReferralLink(chatId);
    bot.sendMessage(chatId, `–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink}`);
});

// –ö–æ–º–∞–Ω–¥–∞ "–û–±–º–µ–Ω—è—Ç—å –º–æ–Ω–µ—Ç—ã"
bot.onText(/üíµ –û–±–º–µ–Ω—è—Ç—å –º–æ–Ω–µ—Ç—ã/, (msg) => {
    const chatId = msg.chat.id;
    const balance = userBalances[chatId] || 0;

    if (balance > 0) {
        const amountInTenge = balance * (100 / exchangeRate);
        bot.sendMessage(chatId, `–í—ã –º–æ–∂–µ—Ç–µ –æ–±–º–µ–Ω—è—Ç—å –≤–∞—à–∏ –º–æ–Ω–µ—Ç—ã –Ω–∞ –¥–µ–Ω—å–≥–∏.\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance} –º–æ–Ω–µ—Ç (${amountInTenge.toFixed(2)} –¢–ì).`);
        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –æ–±–º–µ–Ω–∞ (–≤ –º–æ–Ω–µ—Ç–∞—Ö):');
    } else {
        bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞
bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const messageText = msg.text.trim();

    if (userBalances[chatId] !== undefined && !isNaN(parseFloat(messageText)) && parseFloat(messageText) > 0) {
        const amountToExchange = parseFloat(messageText);

        if (amountToExchange <= userBalances[chatId]) {
            const amountInTenge = amountToExchange * (100 / exchangeRate);

            bot.sendMessage(chatId, `–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –æ–±–º–µ–Ω ${amountToExchange} –º–æ–Ω–µ—Ç –Ω–∞ ${amountInTenge.toFixed(2)} –¢–ì. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤.`);

            withdrawalRequests[chatId] = {
                paymentMethod: null,
                walletNumber: null,
                amount: amountInTenge
            };

            bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤:', {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: 'üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞', callback_data: 'withdraw_card' }],
                        [{ text: 'Payeer', callback_data: 'withdraw_payeer' }],
                        [{ text: 'Qiwi', callback_data: 'withdraw_qiwi' }]
                    ]
                }
            });

            userBalances[chatId] -= amountToExchange;
        } else {
            bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –≤—ã–≤–æ–¥–∞
bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;
    const method = query.data;

    let paymentMethod;
    if (method === 'withdraw_card') {
        paymentMethod = '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞';
    } else if (method === 'withdraw_payeer') {
        paymentMethod = 'Payeer';
    } else if (method === 'withdraw_qiwi') {
        paymentMethod = 'Qiwi';
    }

    if (withdrawalRequests[chatId]) {
        withdrawalRequests[chatId].paymentMethod = paymentMethod;

        bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π ${paymentMethod}:`);
    }
});

// –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å –Ω–æ–º–µ—Ä–æ–º –∫–æ—à–µ–ª—å–∫–∞ –∏–ª–∏ –∫–∞—Ä—Ç—ã
bot.on('message', (msg) => {
    const chatId = msg.chat.id;

    if (withdrawalRequests[chatId] && withdrawalRequests[chatId].paymentMethod) {
        const walletNumber = msg.text.trim();
        withdrawalRequests[chatId].walletNumber = walletNumber;

        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞:');

        bot.once('message', (msg) => {
            const amount = parseFloat(msg.text.trim());
            if (isNaN(amount) || amount <= 0 || amount !== withdrawalRequests[chatId].amount) {
                return bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            }

            withdrawalRequests[chatId].amount = amount;

            bot.sendMessage(chatId, `–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤—ã–≤–æ–¥ ${amount}‚ÇΩ –Ω–∞ ${withdrawalRequests[chatId].paymentMethod} (–Ω–æ–º–µ—Ä: ${withdrawalRequests[chatId].walletNumber}). –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞—à –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.`);

            admins.forEach((adminId) => {
                bot.sendMessage(adminId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${msg.from.username || msg.from.first_name} –∑–∞–ø—Ä–æ—Å–∏–ª –≤—ã–≤–æ–¥ ${amount}‚ÇΩ –Ω–∞ ${withdrawalRequests[chatId].paymentMethod}.\n–ù–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞/–∫–∞—Ä—Ç—ã: ${withdrawalRequests[chatId].walletNumber}`);
            });

            delete withdrawalRequests[chatId];
        });
    }
});

// –ö–æ–º–∞–Ω–¥–∞ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
bot.onText(/‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è/, (msg) => {
    const chatId = msg.chat.id;

    const balanceInTenge = (userBalances[chatId] || 0) * (100 / exchangeRate);
    bot.sendMessage(chatId, `–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${userBalances[chatId]} –º–æ–Ω–µ—Ç.\n–ö—É—Ä—Å –æ–±–º–µ–Ω–∞: ${exchangeRate} –º–æ–Ω–µ—Ç = 100 –¢–ì.\n–í–∞—à –±–∞–ª–∞–Ω—Å –≤ –¢–ì: ${balanceInTenge.toFixed(2)} –¢–ì.`);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
function notifyAdmins(message) {
    admins.forEach(adminId => {
        bot.sendMessage(adminId, message);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
bot.on('message', (msg) => {
    const chatId = msg.chat.id;

    if (admins.includes(chatId)) {
        // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É)
        if (msg.text.toLowerCase() === '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—ã–≤–æ–¥—ã') {
            bot.sendMessage(chatId, '–ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—ã–≤–æ–¥.');
        }
    }
});
